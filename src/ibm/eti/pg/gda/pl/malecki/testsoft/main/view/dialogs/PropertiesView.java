/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ibm.eti.pg.gda.pl.malecki.testsoft.main.view.dialogs;

import ibm.eti.pg.gda.pl.malecki.testsoft.config.Config;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionListener;
import java.awt.event.ItemListener;
import javax.swing.ComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author Dell
 */
public class PropertiesView extends javax.swing.JDialog {

    /**
     * Creates new form PropertiesView
     */
    public PropertiesView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setPreferredSize(new Dimension(400, 300));
        setSize(new Dimension(400, 300));
        final Dimension windowSize = parent.getSize();
        final int x = (windowSize.width - getWidth()) / 2;
        final int y = (windowSize.height - getHeight()) / 2;
        setLocation(x, y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        labLanguage = new javax.swing.JLabel();
        langList = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        protocolList = new javax.swing.JComboBox<>();
        devicePanel = new javax.swing.JPanel();
        btPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        deviceName = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        deviceAddress = new javax.swing.JLabel();
        selectBTDevice = new javax.swing.JButton();
        antPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        hrDevice = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        spCadDevice = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        powDevice = new javax.swing.JLabel();
        selectANTDevice = new javax.swing.JButton();
        save = new javax.swing.JButton();
        cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("ibm/eti/pg/gda/pl/malecki/testsoft/config/config", Config.LOCALE); // NOI18N
        setTitle(bundle.getString("Properties.title")); // NOI18N
        setResizable(false);
        getContentPane().setLayout(new java.awt.FlowLayout());

        labLanguage.setText(bundle.getString("Properties.language")); // NOI18N
        labLanguage.setPreferredSize(new java.awt.Dimension(150, 30));
        getContentPane().add(labLanguage);

        langList.setPreferredSize(new java.awt.Dimension(200, 30));
        getContentPane().add(langList);

        jLabel1.setText(bundle.getString("Properties.deviceProtocol")); // NOI18N
        jLabel1.setAlignmentY(0.0F);
        jLabel1.setPreferredSize(new java.awt.Dimension(150, 30));
        getContentPane().add(jLabel1);

        protocolList.setAlignmentX(0.0F);
        protocolList.setPreferredSize(new java.awt.Dimension(200, 30));
        getContentPane().add(protocolList);

        devicePanel.setPreferredSize(new java.awt.Dimension(370, 150));
        devicePanel.setLayout(new java.awt.CardLayout());

        btPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btPanel.setPreferredSize(new java.awt.Dimension(400, 102));

        jLabel4.setText(bundle.getString("Properties.deviceName")); // NOI18N
        jLabel4.setPreferredSize(new java.awt.Dimension(150, 30));
        btPanel.add(jLabel4);

        deviceName.setPreferredSize(new java.awt.Dimension(200, 30));
        btPanel.add(deviceName);

        jLabel5.setText(bundle.getString("Properties.deviceAddress")); // NOI18N
        jLabel5.setPreferredSize(new java.awt.Dimension(150, 30));
        btPanel.add(jLabel5);

        deviceAddress.setPreferredSize(new java.awt.Dimension(200, 30));
        btPanel.add(deviceAddress);

        selectBTDevice.setText(bundle.getString("Properties.deviceSelect")); // NOI18N
        selectBTDevice.setPreferredSize(new java.awt.Dimension(150, 30));
        btPanel.add(selectBTDevice);

        devicePanel.add(btPanel, "card2");

        antPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setText(bundle.getString("Properties.hrDeviceID")); // NOI18N
        jLabel6.setPreferredSize(new java.awt.Dimension(150, 30));
        antPanel.add(jLabel6);

        hrDevice.setPreferredSize(new java.awt.Dimension(200, 30));
        antPanel.add(hrDevice);

        jLabel7.setText(bundle.getString("Properties.cadSpDeviceID")); // NOI18N
        jLabel7.setPreferredSize(new java.awt.Dimension(150, 30));
        antPanel.add(jLabel7);

        spCadDevice.setPreferredSize(new java.awt.Dimension(200, 30));
        antPanel.add(spCadDevice);

        jLabel8.setText(bundle.getString("Properties.powDeviceID")); // NOI18N
        jLabel8.setPreferredSize(new java.awt.Dimension(150, 30));
        antPanel.add(jLabel8);

        powDevice.setPreferredSize(new java.awt.Dimension(200, 30));
        antPanel.add(powDevice);

        selectANTDevice.setText(bundle.getString("Properties.deviceSelect")); // NOI18N
        selectANTDevice.setPreferredSize(new java.awt.Dimension(150, 30));
        antPanel.add(selectANTDevice);

        devicePanel.add(antPanel, "card2");

        getContentPane().add(devicePanel);

        save.setText(bundle.getString("Properties.save")); // NOI18N
        save.setPreferredSize(new java.awt.Dimension(100, 30));
        getContentPane().add(save);

        cancel.setText(bundle.getString("Properties.cancel")); // NOI18N
        cancel.setPreferredSize(new java.awt.Dimension(100, 30));
        getContentPane().add(cancel);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PropertiesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PropertiesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PropertiesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PropertiesView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        Config.loadConfig();
        
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PropertiesView dialog = new PropertiesView(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel antPanel;
    private javax.swing.JPanel btPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancel;
    private javax.swing.JLabel deviceAddress;
    private javax.swing.JLabel deviceName;
    private javax.swing.JPanel devicePanel;
    private javax.swing.JLabel hrDevice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel labLanguage;
    private javax.swing.JComboBox<String> langList;
    private javax.swing.JLabel powDevice;
    private javax.swing.JComboBox<String> protocolList;
    private javax.swing.JButton save;
    private javax.swing.JButton selectANTDevice;
    private javax.swing.JButton selectBTDevice;
    private javax.swing.JLabel spCadDevice;
    // End of variables declaration//GEN-END:variables

    public JComboBox<String> getLanguageList() {
        return langList;
    }
    
    public void setLanguageList(ComboBoxModel<String> model) {
        langList.setModel(model);
    }
    
    public void setLanguage(int idx) {
        langList.setSelectedIndex(idx);
    }
    
    public void setProtocolList(ComboBoxModel<String> model) {
        protocolList.setModel(model);
    }
    
    public void setProtocol(int idx) {
        protocolList.setSelectedIndex(idx);
    }
    
    public void addItemChangeListener(ItemListener itemListener) {
        protocolList.addItemListener(itemListener);
    }
    
    public void addSelectBTDeviceActionListener(ActionListener actionListener) {
        selectBTDevice.addActionListener(actionListener);
    }
    
    public void addCancelButtonActionListener(ActionListener actionListener) {
        cancel.addActionListener(actionListener);
    }
        
    public void addSaveButtonActionListener(ActionListener actionListener) {
        save.addActionListener(actionListener);
    }
    
    public void addSelectANTDeviceActionListener(ActionListener actionListener) {
        selectANTDevice.addActionListener(actionListener);
    }
    
    public void setBTData(String name, String address) {
        deviceName.setText(name);
        deviceAddress.setText(address);
        
        changeDevicePanel(btPanel);        
    }
    
    public void setANTData(String hr, String cadSp, String pow) {
        hrDevice.setText(hr);
        spCadDevice.setText(cadSp);
        powDevice.setText(pow);
        
        changeDevicePanel(antPanel);
    }
    
    private void changeDevicePanel(JPanel devPanel) {
        devicePanel.removeAll();
        devicePanel.repaint();
        devicePanel.revalidate();
        
        devicePanel.add(devPanel);
        devicePanel.repaint();
        devicePanel.revalidate();
    }

    public String getDeviceAddress() {
        return deviceAddress.getText();
    }

    public String getDeviceName() {
        return deviceName.getText();
    }

    public String getHrDevice() {
        return hrDevice.getText();
    }

    public String getPowDevice() {
        return powDevice.getText();
    }

    public String getSpCadDevice() {
        return spCadDevice.getText();
    }
    
    public String getProtocol() {
        return (String) protocolList.getSelectedItem();
    }
}
